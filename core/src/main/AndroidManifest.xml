<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="cn.blogss.core">

    <application>
        <activity android:name=".view.SlideConflictActivity"></activity>
        <!-- 不以 : 开头的进程属于全局进程，其他应用通过ShareUID方式可以和它跑在同一个进程中 -->
        <activity
            android:name=".ipc.IPCSecondActivity"
            android:launchMode="singleTask"
            android:process="cn.blogss.core.ipc.remote" /> <!-- 以 : 开头的进程属于当前应用的私有进程，其他应用的组件不可以和它跑在同一个进程中 -->
        <activity
            android:name=".ipc.IPCFirstActivity"
            android:launchMode="singleTask"
            android:process=":remote" />
        <activity
            android:name=".message.MessageActivity"
            android:launchMode="singleTask" />
        <activity
            android:name=".cache.CacheActivity"
            android:launchMode="singleTask" />
        <activity
            android:name=".window.MainActivity"
            android:launchMode="singleTask" />
        <activity
            android:name=".remoteviews.MainActivity"
            android:launchMode="singleTask" />
        <activity
            android:name=".kotlin.MainActivity"
            android:launchMode="singleTask" />
        <activity
            android:name=".screen_adaptation.ScreenAdaptationActivity"
            android:launchMode="singleTask" /> <!-- 活动 -->
        <activity
            android:name=".contentprovider.MainActivity"
            android:launchMode="singleTask" />
        <activity
            android:name=".broadcast.MainActivity"
            android:launchMode="singleTask" />
        <activity
            android:name=".service.ServiceActivity"
            android:launchMode="singleTask" />
        <activity
            android:name=".view.ViewActivity"
            android:launchMode="singleTask" />
        <activity
            android:name=".network.NetworkActivity"
            android:launchMode="singleTask" />
        <!--
            注意：若App的TargetSDK达到了26及其以上，有些正常静态注册的广播就没有用了，如这个
            广播接收器
            enabled:是否启用这个广播接收器
            exported:是否允许这个广播接收器接收本程序以外的广播
        -->
        <!-- 系统开机广播，TargetSDK达到了26及其以上，无效 -->
        <receiver
            android:name=".broadcast.BootCompleteReceiver"
            android:enabled="true"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
        </receiver>
        <!--
        静态注册一个自定义的广播接收器，用来接收自定义的广播，TargetSDK达到了26及其以上，
        需要指定应用程序的包名和广播接收器的类名，否则无效
        -->
        <receiver
            android:name=".broadcast.MyBroadcastReceiver"
            android:enabled="true"
            android:exported="true">
            <intent-filter>
                <action android:name="cn.blogss.core.broadcast.MY_BROADCAST" />
            </intent-filter>
        </receiver> <!-- 声明桌面小部件广播接收器 -->
        <receiver android:name=".remoteviews.MyAppWidgetProvider">
            <intent-filter>
                <action android:name="cn.blogss.core.remoteviews.CLICK" />
                <!-- 该 Action 作为小部件的标识必须存在，这是系统的规范，如果不加，那么这个 receiver就不是一个桌面工具并且无法出现在手机工具列表 -->
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
            </intent-filter>

            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/appwidget_provider_info" />
        </receiver> <!-- 服务 -->
        <service android:name=".service.MyService" />
        <service
            android:name=".ipc.aidl.BookManagerService"
            android:process=":remoteService" />
    </application>

</manifest>